#ifndef MNTProcess_h
#define MNTProcess_h 1

#include "RunInput.hh"

#include "G4HadronInelasticProcess.hh"
#include "G4IonsShenCrossSection.hh"
#include "MNTCrossSection.hh"

// Author: Paul Constantin
class MNTProcess : public G4HadronInelasticProcess {
public:
  MNTProcess(const G4String& processName = "MNT") : G4HadronInelasticProcess(processName, G4GenericIon::GenericIon()) {
    G4CrossSectionDataStore* theStore = GetCrossSectionDataStore();
    theStore->AddDataSet(new G4IonsShenCrossSection());
    theStore->AddDataSet(new MNTCrossSection());
  }
  
  virtual ~MNTProcess() {}
  
  virtual void ProcessDescription(std::ostream& outFile) const {
    outFile << "This proces uses the excitation functions generated by Alexander Karpov's model to generate nucleus-nucleus collisions\n";
  }

private:
  MNTCrossSection* theCrossSection;
};

#endif
